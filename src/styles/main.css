/* Parcel js allows us to use the Import for same directory by default */
@import './normalize.css';
@import './reset.css';

:root {
  --keysBg: #262931;
  --displayBg: #191c22;
  --Bg: rgba(38, 41, 49, 0.9);
  --operatorsBg: rgba(38, 41, 49, 0.5);
  --activeBg: rgba(38, 41, 49, 0.1);
  --white: #ffffff;
  --operatorsSign: #b75c5a;
}

html {
  font-size: 150%;
  font-weight: 400;
  font-family: 'Roboto', sans-serif;
  line-height: 1.4;
}

body {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: radial-gradient(
    circle,
    rgba(240, 248, 255, 1) 0%,
    rgba(148, 187, 233, 1) 100%
  );
}

.noscript {
  margin-bottom: 2rem;
  font-weight: 700;
}

.calculator {
  width: 16rem;
  margin: 0 1rem;
  border-radius: 0.4rem;
  overflow: hidden;
  background-color: var(--Bg);
  box-shadow: 0 0 25px 0 rgba(0, 0, 0, 0.3);
}

@media only screen and (max-width: 430px) {
  .calculator {
    width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    margin: 0;
    border-radius: 0;
  }
}

.calculator-display {
  width: 100%;
  display: flex;
  flex-direction: column;
  padding: 2rem 0.75rem;
  align-items: center;
  justify-content: space-between;
  background-color: var(--displayBg);
  color: var(--white);
  font-weight: 400;
  text-align: right;
}

@media only screen and (max-width: 430px) {
  .calculator-display {
    height: 100%;
    justify-content: flex-end;
  }
}

.main-screen {
  width: 100%;
  display: flex;
  justify-content: flex-end;
  overflow: hidden;
  font-size: calc(1rem * 1.2 * 1.2 * 1.2);
  word-break: break-all;
}

.small-display {
  width: 100%;
  font-size: calc(0.6rem);
}

.calculator-keys {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(4, auto);
  background-color: var(--displayBg);
  grid-gap: 2px;
  padding: 0 0.2rem 0.2rem 0.2rem;
  grid-template-areas:
    'divide times minus delete'
    'seven eight nine plus'
    'four five six plus'
    'one two three equals'
    'clear zero decimal equals';
}

.one {
  grid-area: one;
}
.two {
  grid-area: two;
}
.three {
  grid-area: three;
}
.four {
  grid-area: four;
}
.five {
  grid-area: five;
}
.six {
  grid-area: six;
}
.seven {
  grid-area: seven;
}
.eight {
  grid-area: eight;
}
.nine {
  grid-area: nine;
}
.zero {
  grid-area: zero;
}
.clear {
  grid-area: clear;
}
.decimal {
  grid-area: decimal;
}
.equals {
  grid-area: equals;
}
[data-operator='plus'] {
  grid-area: plus;
}
[data-operator='minus'] {
  grid-area: minus;
}
[data-operator='division'] {
  grid-area: divide;
}
[data-operator='times'] {
  grid-area: times;
}
[data-operator='delete'] {
  grid-area: delete;
}

.key {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.8rem 0.25rem;
  background-color: var(--keysBg);
  color: var(--white);
  border-radius: 0.2rem;
  user-select: none;
}

/* To avoid issues on using Event Delegation in Javascript, I needed to include the data-type='delete and class="key" in the HTML for this image. Therefore, I need to clear the padding that is being added above for all the elements that have the class Key */
.key > img {
  padding: 0;
}

.key:active {
  background-color: var(--activeBg);
}

[data-type='operator'],
[data-type='delete'],
[data-type='equals'] {
  background-color: var(--operatorsBg);
  color: var(--operatorsSign);
}

[data-type='clear'] {
  color: var(--operatorsSign);
}
